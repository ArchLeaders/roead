var searchIndex = JSON.parse('{\
"roead":{"doc":"roead","t":"NNNNEENNNNNNNNNGNNALLLLLLLALLLLLLLLLLLLLLLLLLLOLLLLALLLLLLLLLLALANNNNNNNNNNNNDDEDDDIDDNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMKLLLLLLLLKLLMKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLNNNNNEEENNNNGNNNNNGNNNNNNNNGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDMMMLLLLLLMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMDDMLLLLLLLLFFFMMFFFFLLLLLLLLLLLFLLLMLLLLLLLLLML","n":["Any","BadMagic","Big","BinarySerde","Endian","Error","InsufficientData","InvalidData","InvalidDataD","InvalidNumber","InvalidUtf8","InvalidYaml","InvalidYamlBinary","Io","Little","Result","TypeError","Yaz0Error","aamp","as_any","as_any_mut","as_box_any","borrow","borrow","borrow_mut","borrow_mut","byml","clone","clone","clone_into","clone_into","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","h","into","into","provide","read_options","sarc","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","types","write_options","yaz0","Bool","BufferBinary","BufferF32","BufferInt","BufferU32","Color","Curve1","Curve2","Curve3","Curve4","F32","I32","Name","NameTable","Parameter","ParameterIO","ParameterList","ParameterListMap","ParameterListing","ParameterObject","ParameterObjectMap","Quat","String256","String32","String64","StringRef","U32","Vec2","Vec3","Vec4","add_name","add_name_str","add_name_with_hash","as_any","as_any_mut","as_bool","as_box_any","as_buffer_binary","as_buffer_f32","as_buffer_int","as_buffer_u32","as_color","as_curve1","as_curve2","as_curve3","as_curve4","as_f32","as_i32","as_int","as_mut_bool","as_mut_buffer_binary","as_mut_buffer_f32","as_mut_buffer_int","as_mut_buffer_u32","as_mut_color","as_mut_curve1","as_mut_curve2","as_mut_curve3","as_mut_curve4","as_mut_f32","as_mut_i32","as_mut_quat","as_mut_string256","as_mut_string32","as_mut_string64","as_mut_string_ref","as_mut_u32","as_mut_vec2","as_mut_vec3","as_mut_vec4","as_num","as_quat","as_ref","as_safe_string","as_str","as_string256","as_string32","as_string64","as_string_ref","as_u32","as_vec2","as_vec3","as_vec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","entry","entry","entry","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_binary","from_iter","from_iter","from_iter","from_str","from_text","get","get","get","get_default_name_table","get_mut","get_mut","get_mut","get_name","hash","hash","hash","hash_name","index","index","index","index_mut","index_mut","index_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into_bool","into_buffer_binary","into_buffer_f32","into_buffer_int","into_buffer_u32","into_color","into_curve1","into_curve2","into_curve3","into_curve4","into_f32","into_i32","into_quat","into_string256","into_string32","into_string64","into_string_ref","into_u32","into_vec2","into_vec3","into_vec4","is_empty","is_empty","is_empty","iter","iter","iter","iter_by_name","iter_by_name","iter_by_name","iter_mut","iter_mut","iter_mut","len","len","len","list","list_mut","lists","lists","lists","lists","lists_mut","lists_mut","lists_mut","new","new","new","new","object","object_mut","objects","objects","objects","objects","objects_mut","objects_mut","objects_mut","param_root","read","read_options","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_list","set_object","to_binary","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_text","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","with_data_type","with_list","with_list","with_lists","with_lists","with_object","with_object","with_objects","with_objects","with_parameter","with_parameters","with_root","with_version","write","write_options","Array","ArrayIdx","BinaryData","BinaryRwError","Bool","Byml","BymlError","BymlIndex","Double","FileData","Float","HashIdx","HashMap","HashMap","I32","I64","InvalidVersion","IoError","Map","Map","Null","ParseError","String","StringIdx","TypeError","U32","U64","ValueHashMap","ValueHashMap","as_any","as_any_mut","as_array","as_binary_data","as_bool","as_box_any","as_double","as_float","as_hash_map","as_i32","as_i64","as_int","as_map","as_mut_array","as_mut_binary_data","as_mut_bool","as_mut_double","as_mut_float","as_mut_hash_map","as_mut_i32","as_mut_i64","as_mut_map","as_mut_string","as_mut_u32","as_mut_u64","as_mut_value_hash_map","as_num","as_string","as_u32","as_u64","as_value_hash_map","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deserialize","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_binary","from_iter","from_iter","from_text","hash","index","index_mut","into","into","into","into_array","into_binary_data","into_bool","into_double","into_float","into_hash_map","into_i32","into_i64","into_map","into_string","into_u32","into_u64","into_value_hash_map","is_null","provide","read","serialize","source","to_binary","to_binary_with_version","to_owned","to_string","to_text","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","File","Sarc","SarcWriter","add_alignment_requirement","add_file","add_files","are_files_equal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","data_offset","decompressed_data","endian","endian","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_at","files","files","fmt","fmt","fmt","from","from","from","from","from_sarc","get","get_data","get_file","guess_min_alignment","hash","index","index","into","into","into","is_aamp","is_byml","is_compressed","is_empty","is_file_sarc","is_sarc","is_valid_alignment","len","name","name","new","new","parse_sarc","remove_file","set_endian","set_legacy_mode","set_min_alignment","to_binary","to_owned","to_owned","try_from","try_from","try_from","try_get","try_get_data","try_into","try_into","try_into","type_id","type_id","type_id","unwrap_name","unwrap_name_unchecked","with_alignment_requirement","with_endian","with_file","with_files","with_legacy_mode","with_min_alignment","write","Color","Curve","FixedSafeString","Quat","Vector2f","Vector3f","Vector4f","a","a","a","as_any","as_any_mut","as_box_any","as_mut","as_ref","as_str","b","b","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","d","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","floats","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","g","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","partial_cmp","r","read_options","read_options","read_options","read_options","read_options","read_options","read_options","serialize","serialize","serialize","serialize","serialize","serialize","serialize","t","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_options","write_options","write_options","write_options","write_options","write_options","x","x","x","y","y","y","z","z","CompressOptions","Header","alignment","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compress","compress_if","compress_with_options","compression_level","data_alignment","decompress","decompress_if","decompress_into","decompress_unchecked","default","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_header","hash","into","into","magic","read_options","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uncompressed_size","write_options"],"q":[[0,"roead"],[65,"roead::aamp"],[420,"roead::byml"],[568,"roead::sarc"],[661,"roead::types"],[836,"roead::yaz0"]],"d":["","","Big Endian (Wii U)","","Represents endianness where applicable.","Error type for this crate.","","","","","","","","","Little Endian (Switch)","","","","Port of the <code>oead::aamp</code> module.","","","","","","","","Port of the <code>oead::byml</code> module.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","A convenient macro for hashing AAMP names. This can help …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Port of the <code>oead::sarc</code> module.","","","","","","","","","","","Miscellaneous needful oead types.","","Bindings for the <code>oead::yaz0</code> module, which supports Yaz0 …","Boolean.","Buffer of binary data.","Buffer of floats.","Buffer of signed ints.","Buffer of unsigned ints.","Color.","A single curve.","Two curves.","Three curves.","Four curves.","Float.","Int.","Parameter structure name. This is a wrapper around a CRC32 …","A table of names that is used to recover original names in …","Parameter.","<code>Parameter</code> IO. This is the root parameter list and the only …","<code>Parameter</code> list. This is essentially a dictionary of …","Newtype map of parameter lists.","Trait abstracting over <code>ParameterList</code> and <code>ParameterIO</code>. …","<code>Parameter</code> object. This is essentially a dictionary of …","Newtype map of parameter objects.","Quaternion.","String (max length 256 bytes).","String (max length 32 bytes).","String (max length 64 bytes).","String (no length limit).","Unsigned int.","2D vector.","3D vector.","4D vector.","Add a known string to the name table.","Add a known string to the name table.","Add a known string to the name table if you already know …","","","Get the inner bool value.","","Get the inner binary buffer value.","Get the inner BufferF32 value.","Get the inner BufferI32 value.","Get the inner u32 buffer value.","Get the inner color value.","Get the inner Curve1 value.","Get the inner Curve2 value.","Get the inner Curve3 value.","Get the inner Curve4 value.","Get the inner f32 value.","Get the inner i32 value.","Get the inner value as an integer of any type. Casts the …","Get a mutable reference to the inner bool.","Get a mutable reference to the inner binary buffer.","Get a mutable reference to the inner BufferF32.","Get a mutable reference to the inner BufferI32.","Get a mutable reference to the inner u32 buffer.","Get a mutable reference to the inner color.","Get a mutable reference to the inner Curve1.","Get a mutable reference to the inner Curve2.","Get a mutable reference to the inner Curve3.","Get a mutable reference to the inner Curve4.","Get a mutable reference to the inner f32.","Get a mutable reference to the inner i32.","Get a mutable reference to the inner Quat.","Get a mutable reference to the inner String256.","Get a mutable reference to the inner String32.","Get a mutable reference to the inner String64.","Get a mutable reference to the inner string.","Get a mutable reference to the inner u32.","Get a mutable reference to the inner Vector2f.","Get a mutable reference to the inner Vector3f.","Get a mutable reference to the inner Vector4f.","Get the inner value as a number of any type. Casts the …","Get the inner Quat value.","","Get the value from any string type. May truncate.","Returns a string slice if the parameter is any string type.","Get the inner String256 value.","Get the inner String32 value.","Get the inner String64 value.","Get the inner string value.","Get the inner u32 value.","Get the inner Vector2f value.","Get the inner Vector3f value.","Get the inner Vector4f value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data type identifier. Typically “xml”.","","","","","","","","","","","","","","Get a full entry by name or hash.","Get a full entry by name or hash.","Get a full entry by name or hash.","","","","","","","","","","","","","","","","","","","","","","Insert multiple entries from an iterator.","Insert multiple entries from an iterator.","Insert multiple entries from an iterator.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Load a parameter archive from binary data.","","","","Const function to construct from a string.","Parse ParameterIO from YAML text.","Get an entry value by name or hash.","Get an entry value by name or hash.","Get an entry value by name or hash.","Returns the default instance of the name table, which is …","Get an entry value mutably by name or hash.","Get an entry value mutably by name or hash.","Get an entry value mutably by name or hash.","Tries to guess the name that is associated with the given …","","The CRC32 hash of the name.","","CRC hash function matching that used in BOTW.","","","","","","","Insert a new entry.","Insert a new entry.","Insert a new entry.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the inner bool value.","Extract the inner binary buffer value.","Extract the inner BufferF32 value.","Extract the inner BufferI32 value.","Extract the inner u32 buffer value.","Extract the inner color value.","Extract the inner Curve1 value.","Extract the inner Curve2 value.","Extract the inner Curve3 value.","Extract the inner Curve4 value.","Extract the inner f32 value.","Extract the inner i32 value.","Extract the inner Quat value.","Extract the inner String256 value.","Extract the inner String32 value.","Extract the inner String64 value.","Extract the inner string value.","Extract the inner u32 value.","Extract the inner Vector2f value.","Extract the inner Vector3f value.","Extract the inner Vector4f value.","Returns <code>true</code> if the map is empty.","Returns <code>true</code> if the map is empty.","Returns <code>true</code> if the map is empty.","Iterate entries.","Iterate entries.","Iterate entries.","Iterate entries by name (this is potentially rather …","Iterate entries by name (this is potentially rather …","Iterate entries by name (this is potentially rather …","Iterate entries mutably.","Iterate entries mutably.","Iterate entries mutably.","Return the number of entries.","Return the number of entries.","Return the number of entries.","Get a parameter list by name or hash.","Get a mutable reference to a parameter list by name or …","Returns a map of parameter lists.","","","Map of child parameter lists.","Returns a mutable map of parameter lists.","","","Create a new name table, optionally including default BOTW …","Create a new empty parameter object.","Create a new empty parameter list.","Create a new empty parameter IO.","Get a parameter object by name or hash.","Get a mutable reference to a parameter object by name or …","Returns a map of parameter objects.","","","Map of child parameter objects.","Returns a mutable map of parameter objects.","","","Root parameter list.","Read a parameter archive from a binary reader.","","","","","","","","","Set a parameter list by name or hash.","Set a parameter object by name or hash.","Serialize the parameter IO to in-memory bytes.","","","","","","","","","Serialize the parameter IO to YAML.","","","","","","","","","","","","","","","","","","","","","","","","","Data version (not the AAMP format version). Typically 0.","Builder-like method to set the data type.","Builder-like method to add a new parameter list.","Builder-like method to add a new parameter list.","Builder-like method to add multiple parameter lists from …","Builder-like method to add multiple parameter lists from …","Builder-like method to add a new parameter object.","Builder-like method to add a new parameter object.","Builder-like method to add multiple parameter objects from …","Builder-like method to add multiple parameter objects from …","Builder-like method to add a new parameter.","Builder-like method to add multiple parameters from an …","Builder-like method to set the root parameter list.","Builder-like method to set the data version.","Serialize the parameter IO to binary using the given …","","Array of BYML nodes.","Index into an array node. The index is an integer.","Binary data (not used in BOTW).","","Boolean value.","Represents a Nintendo binary YAML (BYML) document or node.","","Convenience type used for indexing into <code>Byml</code>s","64-bit float.","File data","32-bit float.","Index into a hash node. The key is a u32 hash.","","Hash map of BYML nodes with u32 keys.","32-bit signed integer.","64-bit signed integer.","","","A BYML hash node.","Hash map of BYML nodes with string keys.","Null value.","","String value.","Index into a hash node. The key is a string.","","32-bit unsigned integer.","64-bit unsigned integer.","","Hash map of BYML nodes with u32 keys and additional value.","","","Get a reference to the inner array of BYML nodes.","Get a reference to the inner byte slice.","Get a reference to the inner bool value.","","Get a reference to the inner f64 value.","Get a reference to the inner f32 value.","Get a reference to the inner u32-keyed hash map of BYML …","Get a reference to the inner i32 value.","Get a reference to the inner i64 value.","Get the inner value as an integer of any type. Casts the …","Get a reference to the inner string-keyed hash map of BYML …","Get a mutable reference to the inner array of BYML nodes.","Get a mutable reference to the inner byte slice.","Get a mutable reference to the inner bool value.","Get a mutable reference to the inner f64 value.","Get a mutable reference to the inner f32 value.","Get a reference to the inner u32-keyed hash map of BYML …","Get a mutable reference to the inner i32 value.","Get a mutable reference to the inner i64 value.","Get a mutable reference to the inner hash map of BYML …","Get a mutable reference to the inner string value.","Get a mutable reference to the inner u32 value.","Get a mutable reference to the inner u64 value.","Get a reference to the inner u32-keyed hash map of BYML …","Get the inner value as a number of any type. Casts the …","Get a reference to the inner string value.","Get a reference to the inner u32 value.","Get a reference to the inner u64 value.","Get a reference to the inner u32-keyed hash map of BYML …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Load a document from binary data.","","","Parse BYML document from YAML text.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the inner Byml array value.","Extract the inner byte slice value.","Extract the inner bool value.","Extract the inner f64 value.","Extract the inner f32 value.","Extract the inner hash map value.","Extract the inner i32 value.","Extract the inner i64 value.","Extract the inner map value.","Extract the inner string value.","Extract the inner u32 value.","Extract the inner u64 value.","Extract the inner value hash map value.","Checks if the BYML node is a null node","","Read a document from a binary reader.","","","Serialize the document to bytes with the specified …","Serialize the document to BYML with the specified …","","","Serialize the document to YAML. This can only be done for …","","","","","","","","","","","","","Serialize the document to binary into the given writer. …","Provides readonly access to a file that is stored in a …","A simple SARC archive reader","A simple SARC archive writer","Add or modify a data alignment requirement for a file …","Add a file to the archive, with greater generic …","Add files to the archive from an iterator, with greater …","Returns true is each archive contains the same files","","","","","","","","","","","File data (as a slice).","File data (as a slice).","Get the offset to the beginning of file data","Returns a decompressed copy of the file data.","Get the archive endianness","","Returns true if and only if the raw archive data is …","","","","","","","","","Get a file by index. Returns error if index &gt; file count.","Returns an iterator over the contained files","Files to be written.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Creates a new SARC writer by taking attributes and files …","Get a file by name, returning <code>None</code> on its absence or any …","Get file data by name, returning <code>None</code> on its absence or …","Get a file’s data from the archive, for convience.","Guess the minimum data alignment for files that are stored …","","","File index in the SARC archive.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if the file is an AAMP.","Check if the file is a BYML document.","Check if the file is yaz0 compressed.","Check if the SARC contains no files.","Checks if a data slice represents a SARC archive","Check if the file is a SARC.","Check if a potential alignment is valid for building a SARC","Get the number of files that are stored in the archive","File name. May be empty for file entries that do not use …","File name. May be empty for file entries that do not use …","Parses a SARC archive from binary data.","A simple SARC archive writer","Attempt to parse file as SARC.","Remove a file from the archive, for convenience.","Set the endianness","Set whether to use legacy mode (for games without a …","Set the minimum data alignment.","Write a SARC archive to an in-memory buffer using the …","","","","","","Get a file by name, returning a <code>Result</code> of an <code>Option</code>. This …","Get file data by name, returning a <code>Result</code> of an <code>Option</code>. …","","","","","","","File name. May be empty for file entries that do not use …","File name. May be empty for file entries that do not use …","Builder-style method to add or modify a data alignment …","Builder-style method to set the endianness","Builder-style method to add a file to the archive.","Builder-style method to add files to the archive from an …","Builder-style method to set whether to use legacy mode …","Builder-style method to set the minimum data alignment","Write a SARC archive to a Write + Seek writer using the …","RGBA color (Red/Green/Blue/Alpha).","Curve (<code>sead::hostio::curve*</code>)","A string class with its own inline, fixed-size storage.","Quaternion.","2D vector.","3D vector.","4D vector.","","","","","","","","","Extracts a string slice from the owned string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Yaz0 compression options.","The header of Yaz0 compressed data.","Buffer alignment hint for decompression","","","","","","","","","Compress data with default compression settings (no …","Compress data conditionally, if an associated path has a …","Compress data with custom compression settings.","Compression level (6 to 9; 6 is fastest and 9 is slowest)","[Newer files only] Required buffer alignment","Decompress Yaz0 data to vector.","Conditionally decompress Yaz0 data to a vector. Returns a …","Decompress Yaz0 data into an existing buffer, returning …","Decompress Yaz0 data into an existing buffer, returning …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the header of Yaz0 compressed data, if it exists.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Should be “Yaz0”.","","","","","","","","","","The size of the uncompressed data.",""],"i":[4,4,5,4,0,0,4,4,4,4,4,4,4,4,5,0,4,4,0,4,4,4,4,5,4,5,0,4,5,4,5,5,5,5,4,4,5,4,4,4,4,4,4,4,4,5,0,4,5,4,5,0,4,4,5,4,4,5,4,5,4,5,0,5,0,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,27,27,27,48,48,32,48,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,48,32,32,32,32,32,32,32,32,32,32,27,32,48,48,49,50,51,52,53,27,32,48,49,50,51,52,53,32,48,49,50,51,52,53,32,48,49,50,51,52,53,53,27,49,50,51,52,53,32,48,49,50,51,52,53,49,50,51,32,48,49,50,51,52,53,32,32,48,48,49,49,50,50,51,51,52,52,53,53,49,50,51,27,32,48,48,49,50,51,52,53,27,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,48,48,48,48,48,48,48,48,49,50,51,52,53,53,49,50,51,48,53,49,50,51,0,49,50,51,27,32,48,48,0,49,50,51,49,50,51,49,50,51,27,32,48,49,50,51,52,53,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,89,89,89,52,53,52,89,52,53,27,49,52,53,89,89,89,52,53,52,89,52,53,53,53,48,32,48,49,50,51,52,53,89,89,53,32,48,49,50,51,52,53,48,53,27,32,48,49,50,51,52,53,27,32,48,49,50,51,52,53,27,32,48,49,50,51,52,53,53,53,52,53,52,53,52,53,52,53,49,49,53,53,53,48,65,73,65,72,65,0,0,0,65,65,65,73,0,65,65,65,72,72,0,65,65,72,65,73,72,65,65,0,65,72,72,65,65,65,72,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,73,72,65,73,72,65,65,65,65,65,65,65,72,72,65,73,73,73,73,73,73,72,72,72,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,73,72,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,72,65,65,72,65,65,65,72,65,69,67,71,73,72,65,73,72,65,73,72,65,65,0,0,0,75,75,75,76,76,75,77,76,75,77,76,75,76,75,77,77,76,77,76,75,76,75,77,76,76,75,75,77,77,76,76,75,76,75,77,76,75,75,77,75,76,76,75,76,76,76,77,76,75,77,77,77,77,76,75,77,0,76,77,77,76,75,77,75,75,75,75,75,76,75,76,75,77,76,76,76,75,77,76,75,77,77,77,75,75,75,75,75,75,75,0,0,0,0,0,0,0,43,38,39,44,44,44,44,44,44,43,38,39,44,44,45,46,47,43,38,39,44,45,46,47,43,38,39,43,44,45,46,47,43,38,39,44,45,46,47,43,38,39,43,44,39,44,44,44,45,46,47,43,38,39,44,45,46,47,43,38,39,44,44,39,44,44,45,46,47,43,38,39,44,44,44,44,45,46,47,43,38,39,38,44,45,46,47,43,38,39,44,45,46,47,43,38,39,44,38,44,45,46,47,43,38,39,44,45,46,47,43,38,39,47,44,45,46,47,43,38,39,44,44,44,45,45,45,46,46,46,47,47,47,43,43,43,38,38,38,39,44,45,46,47,43,38,39,44,45,46,47,43,38,39,45,46,47,43,38,39,45,46,47,45,46,47,46,47,0,0,86,85,86,85,86,85,86,85,86,0,0,0,86,85,0,0,0,0,86,85,86,85,85,86,86,85,86,85,86,0,85,85,86,85,85,85,86,85,86,85,86,85,86,85,85],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]],[[3,[1,2]]]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[[]],[[]],[[5,5],6],[[],6],[[],6],[[4,7],8],[[4,7],8],[[5,7],8],[9,4],[10,4],[11,4],[12,4],[13,4],[14,4],[[]],[15,4],[[]],0,[[]],[[]],[16],[[[0,[17,18]],19],[[20,[5]]]],0,[4,[[22,[21]]]],[[]],[[]],[[],23],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],0,[[5,[0,[26,18]],19],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[27,[30,[[29,[28]]]]]],[[27,28]],[[27,[30,[[29,[28]]]],31]],[[],1],[[],1],[32,[[33,[6]]]],[[[3,[2]]],[[3,[1,2]]]],[32,[[33,[[35,[34]]]]]],[32,[[33,[[35,[36]]]]]],[32,[[33,[[35,[37]]]]]],[32,[[33,[[35,[31]]]]]],[32,[[33,[38]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[36]]]],[32,[[33,[37]]]],[32,[[33,[41]]]],[32,[[33,[6]]]],[32,[[33,[[35,[34]]]]]],[32,[[33,[[42,[36]]]]]],[32,[[33,[[42,[37]]]]]],[32,[[33,[[35,[31]]]]]],[32,[[33,[38]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[36]]]],[32,[[33,[37]]]],[32,[[33,[43]]]],[32,[[33,[44]]]],[32,[[33,[44]]]],[32,[[33,[44]]]],[32,[[33,[28]]]],[32,[[33,[31]]]],[32,[[33,[45]]]],[32,[[33,[46]]]],[32,[[33,[47]]]],[32,[[33,[41]]]],[32,[[33,[43]]]],[48,31],[32,[[33,[44]]]],[32,[[33,[28]]]],[32,[[33,[44]]]],[32,[[33,[44]]]],[32,[[33,[44]]]],[32,[[33,[28]]]],[32,[[33,[31]]]],[32,[[33,[45]]]],[32,[[33,[46]]]],[32,[[33,[47]]]],[[]],[[]],[48,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],27],[[],49],[[],50],[[],51],[[],52],[[],53],[54,[[24,[32]]]],[54,[[24,[48]]]],[54,[[24,[49]]]],[54,[[24,[50]]]],[54,[[24,[51]]]],[54,[[24,[52]]]],[54,[[24,[53]]]],[[49,[30,[48]]],[[55,[48,32]]]],[[50,[30,[48]]],[[55,[48,49]]]],[[51,[30,[48]]],[[55,[48,52]]]],[[32,32],6],[[48,48],6],[[49,49],6],[[50,50],6],[[51,51],6],[[52,52],6],[[53,53],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[49,56]],[[50,56]],[[51,56]],[[27,7],8],[[32,7],8],[[48,7],8],[[48,7],8],[[49,7],8],[[50,7],8],[[51,7],8],[[52,7],8],[[53,7],8],[[]],[44,32],[37,32],[31,32],[[[42,[34]]],32],[[[42,[31]]],32],[[[42,[37]]],32],[[[40,[39]]],32],[44,32],[44,32],[46,32],[45,32],[[[40,[39]]],32],[47,32],[[[40,[39]]],32],[[[40,[39]]],32],[38,32],[[]],[36,32],[[[42,[36]]],32],[43,32],[57,32],[6,32],[23,48],[31,48],[23,48],[[]],[28,48],[44,48],[57,48],[57,48],[[]],[[]],[[]],[[]],[[]],[[[58,[[35,[34]]]]],[[33,[53]]]],[56,49],[56,50],[56,51],[28,48],[[[58,[28]]],[[33,[53]]]],[[49,[30,[48]]],[[22,[32]]]],[[50,[30,[48]]],[[22,[49]]]],[[51,[30,[48]]],[[22,[52]]]],[[],[[60,[[59,[27]]]]]],[[49,[30,[48]]],[[22,[32]]]],[[50,[30,[48]]],[[22,[49]]]],[[51,[30,[48]]],[[22,[52]]]],[[27,31,61,31],[[22,[[29,[28]]]]]],[[32,62]],[48,31],[[48,62]],[28,31],[[49,[30,[48]]],32],[[50,[30,[48]]],49],[[51,[30,[48]]],52],[[49,[30,[48]]],32],[[50,[30,[48]]],49],[[51,[30,[48]]],52],[[49,[30,[48]],32]],[[50,[30,[48]],49]],[[51,[30,[48]],52]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[33,[6]]]],[32,[[33,[[42,[34]]]]]],[32,[[33,[[42,[36]]]]]],[32,[[33,[[42,[37]]]]]],[32,[[33,[[42,[31]]]]]],[32,[[33,[38]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[[40,[39]]]]]],[32,[[33,[36]]]],[32,[[33,[37]]]],[32,[[33,[43]]]],[32,[[33,[44]]]],[32,[[33,[44]]]],[32,[[33,[44]]]],[32,[[33,[57]]]],[32,[[33,[31]]]],[32,[[33,[45]]]],[32,[[33,[46]]]],[32,[[33,[47]]]],[49,6],[50,6],[51,6],[49,63],[50,63],[51,63],[49,63],[50,63],[51,63],[49,63],[50,63],[51,63],[49,61],[50,61],[51,61],[[[30,[48]]],[[22,[52]]]],[[[30,[48]]],[[22,[52]]]],[[],51],[52,51],[53,51],0,[[],51],[52,51],[53,51],[6,27],[[],49],[[],52],[[],53],[[[30,[48]]],[[22,[49]]]],[[[30,[48]]],[[22,[49]]]],[[],50],[52,50],[53,50],0,[[],50],[52,50],[53,50],0,[[[0,[17,18]]],[[33,[53]]]],[[[0,[17,18]],19],[[20,[48]]]],[[32,64],24],[[48,64],24],[[49,64],24],[[50,64],24],[[51,64],24],[[52,64],24],[[53,64],24],[[[30,[48]],52]],[[[30,[48]],49]],[53,[[42,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[53,23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[53,[30,[57]]],53],[[52,[30,[48]],52],52],[[53,[30,[48]],52],53],[[52,56],52],[[53,56],53],[[52,[30,[48]],49],52],[[53,[30,[48]],49],53],[[52,56],52],[[53,56],53],[[49,[30,[48]],32],49],[[49,56],49],[[53,52],53],[[53,31],53],[[53,[0,[26,18]]],33],[[48,[0,[26,18]],19],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[65,[[33,[[35,[65]]]]]],[65,[[33,[[35,[34]]]]]],[65,[[33,[6]]]],[[[3,[2]]],[[3,[1,2]]]],[65,[[33,[66]]]],[65,[[33,[36]]]],[65,[[33,[67]]]],[65,[[33,[37]]]],[65,[[33,[68]]]],[65,[[33,[41]]]],[65,[[33,[69]]]],[65,[[33,[[42,[65]]]]]],[65,[[33,[[35,[34]]]]]],[65,[[33,[6]]]],[65,[[33,[66]]]],[65,[[33,[36]]]],[65,[[33,[67]]]],[65,[[33,[37]]]],[65,[[33,[68]]]],[65,[[33,[69]]]],[65,[[33,[57]]]],[65,[[33,[31]]]],[65,[[33,[70]]]],[65,[[33,[71]]]],[65,[[33,[41]]]],[65,[[33,[57]]]],[65,[[33,[31]]]],[65,[[33,[70]]]],[65,[[33,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[[]],[[],65],[54,[[24,[65]]]],[[65,65],6],[[65,65],6],[[72,7],8],[[72,7],8],[[65,7],8],[31,73],[[]],[28,73],[57,73],[61,73],[37,73],[9,72],[[]],[15,72],[[[42,[65]]],65],[70,65],[71,65],[66,65],[23,65],[[]],[37,65],[[[35,[65]]],65],[31,65],[36,65],[57,65],[6,65],[57,65],[23,65],[69,65],[67,65],[28,65],[68,65],[[[58,[[35,[34]]]]],[[33,[65]]]],[56,65],[56,65],[[[58,[28]]],[[33,[65]]]],[[65,62]],[[65,[30,[73]]]],[[65,[30,[73]]]],[[]],[[]],[[]],[65,[[33,[[42,[65]]]]]],[65,[[33,[[42,[34]]]]]],[65,[[33,[6]]]],[65,[[33,[66]]]],[65,[[33,[36]]]],[65,[[33,[67]]]],[65,[[33,[37]]]],[65,[[33,[68]]]],[65,[[33,[69]]]],[65,[[33,[57]]]],[65,[[33,[31]]]],[65,[[33,[70]]]],[65,[[33,[71]]]],[65,6],[16],[[[0,[17,18]]],[[33,[65]]]],[[65,64],24],[72,[[22,[21]]]],[[65,5],[[42,[34]]]],[[65,5,74],[[42,[34]]]],[[]],[[],23],[65,23],[65,[[24,[69]]]],[65,[[24,[67]]]],[65,[[24,[71]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[65,[0,[26,18]],5,74],33],0,0,0,[[75,23,61]],[[75,[30,[23]],[30,[[42,[34]]]]]],[[75,56]],[[76,76],6],[[]],[[]],[[]],[[]],[[]],[[]],[76,76],[75,75],[[]],[[]],[77,[[35,[34]]]],0,[76,61],[77,[[33,[[42,[34]]]]]],[76,5],0,[[76,76],6],[[75,75],6],[[77,77],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[76,61],[[33,[77]]]],0,0,[[76,7],8],[[75,7],8],[[77,7],8],[[]],[[]],[76,75],[[]],[76,75],[[76,28],[[22,[77]]]],[[76,28],[[22,[[35,[34]]]]]],[[75,[0,[78,79,80]]],[[22,[[42,[34]]]]]],[76,61],[[76,62]],[[76,[81,[28]]]],[77,61],[[]],[[]],[[]],[77,6],[77,6],[77,6],[76,6],[[[35,[34]]],6],[77,6],[61,6],[76,61],[77,[[22,[28]]]],0,[[[30,[[29,[[35,[34]]]]]]],[[33,[76]]]],[5,75],[77,[[33,[76]]]],[[75,[0,[78,79,80]]]],[[75,5]],[[75,6]],[[75,61]],[75,[[42,[34]]]],[[]],[[]],[[],24],[[],24],[[],24],[[76,28],[[33,[[22,[77]]]]]],[[76,28],[[33,[[22,[[35,[34]]]]]]]],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[77,28],[77,28],[[75,23,61],75],[[75,5],75],[[75,[30,[23]],[30,[[42,[34]]]]],75],[[75,56],75],[[75,6],75],[[75,61],75],[[75,[0,[26,18]]],33],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]],[[3,[1,2]]]],[44,28],[44,28],[44,28],0,0,0,[[]],[44,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[44,44],[45,45],[46,46],[47,47],[43,43],[38,38],[39,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],44],[[],39],[44,28],[44,28],[54,[[24,[44]]]],[54,[[24,[45]]]],[54,[[24,[46]]]],[54,[[24,[47]]]],[54,[[24,[43]]]],[54,[[24,[38]]]],[54,[[24,[39]]]],[[44,44],6],[[45,45],6],[[46,46],6],[[47,47],6],[[43,43],6],[[38,38],6],[[39,39],6],[[],6],[[],6],0,[[44,7],8],[[44,7],8],[[45,7],8],[[46,7],8],[[47,7],8],[[43,7],8],[[38,7],8],[[39,7],8],[28,44],[[]],[57,44],[23,44],[[]],[[]],[[]],[[]],[[]],[[]],0,[[44,62]],[[45,62]],[[46,62]],[[47,62]],[[43,62]],[[38,62]],[[39,62]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44],[[22,[82]]]],0,[[[0,[17,18]],19],[[20,[44]]]],[[[0,[17,18]],19],[[20,[45]]]],[[[0,[17,18]],19],[[20,[46]]]],[[[0,[17,18]],19],[[20,[47]]]],[[[0,[17,18]],19],[[20,[43]]]],[[[0,[17,18]],19],[[20,[38]]]],[[[0,[17,18]],19],[[20,[39]]]],[[44,64],24],[[45,64],24],[[46,64],24],[[47,64],24],[[43,64],24],[[38,64],24],[[39,64],24],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],24],[32,[[24,[44]]]],[[],24],[[[84,[83]]],[[33,[45]]]],[32,[[24,[45]]]],[[[84,[83]]],[[33,[46]]]],[32,[[24,[46]]]],[[],24],[[],24],[[[84,[83]]],[[33,[47]]]],[32,[[24,[47]]]],[[[84,[83]]],[[33,[43]]]],[[],24],[32,[[24,[43]]]],[32,[[24,[38]]]],[[[84,[83]]],[[33,[38]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[45,[0,[26,18]],19],20],[[46,[0,[26,18]],19],20],[[47,[0,[26,18]],19],20],[[43,[0,[26,18]],19],20],[[38,[0,[26,18]],19],20],[[39,[0,[26,18]],19],20],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[85,85],[86,86],[[]],[[]],[[[58,[[35,[34]]]]],[[42,[34]]]],[[[35,[34]],[58,[87]]],[[29,[[35,[34]]]]]],[[[58,[[35,[34]]]],86],[[42,[34]]]],0,0,[[[58,[[35,[34]]]]],[[33,[[42,[34]]]]]],[[[35,[34]]],[[29,[[35,[34]]]]]],[[[58,[[35,[34]]]],[88,[[35,[34]]]]],[[33,[61]]]],[[[58,[[35,[34]]]],[88,[[35,[34]]]]],61],[[],86],[[85,85],6],[[86,86],6],[[],6],[[],6],[[],6],[[],6],[[85,7],8],[[86,7],8],[[]],[[]],[[[58,[[35,[34]]]]],[[22,[85]]]],[[85,62]],[[]],[[]],0,[[[0,[17,18]],19],[[20,[85]]]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],0,[[85,[0,[26,18]],19],20]],"c":[],"p":[[8,"Any"],[3,"Global"],[3,"Box"],[4,"Error"],[4,"Endian"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"DecodeError"],[3,"Exception"],[4,"Error"],[3,"Utf8Error"],[4,"Error"],[3,"Error"],[3,"Demand"],[8,"Read"],[8,"Seek"],[4,"Endian"],[6,"BinResult"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"Write"],[3,"NameTable"],[15,"str"],[4,"Cow"],[8,"Into"],[15,"u32"],[4,"Parameter"],[6,"Result"],[15,"u8"],[15,"slice"],[15,"f32"],[15,"i32"],[3,"Color"],[3,"Curve"],[15,"array"],[8,"Copy"],[3,"Vec"],[3,"Quat"],[3,"FixedSafeString"],[3,"Vector2f"],[3,"Vector3f"],[3,"Vector4f"],[3,"Name"],[3,"ParameterObject"],[3,"ParameterObjectMap"],[3,"ParameterListMap"],[3,"ParameterList"],[3,"ParameterIO"],[8,"Deserializer"],[4,"Entry"],[8,"IntoIterator"],[6,"String"],[8,"AsRef"],[3,"Arc"],[3,"Lazy"],[15,"usize"],[8,"Hasher"],[8,"Iterator"],[8,"Serializer"],[4,"Byml"],[15,"f64"],[6,"HashMap"],[15,"i64"],[6,"Map"],[15,"u64"],[6,"ValueHashMap"],[4,"BymlError"],[4,"BymlIndex"],[15,"u16"],[3,"SarcWriter"],[3,"Sarc"],[3,"File"],[8,"Sized"],[8,"Hash"],[8,"Eq"],[8,"Borrow"],[4,"Ordering"],[3,"Tree"],[3,"NodeRef"],[3,"Header"],[3,"CompressOptions"],[3,"Path"],[8,"AsMut"],[8,"ParameterListing"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
